namespace SsProtocol;

struct Vec3_f {
    x: float;
    y: float;
    z: float;
}

struct Vec4_f {
    x: float;
    y: float;
    z: float;
    w: float;
}

struct Vec3_u32 {
    x: uint32;
    y: uint32;
    z: uint32;
}

enum Capabilities: uint64 (bit_flags) {
    GenerateTerrainChunk,
    Connected = 63,
}

table InitRequest {
    seed: uint64;
}

table Environment {
    color_ambient: Vec4_f;
    light_color: Vec4_f;
    light_power: float;
    screen_gamma: float = 2.2;
}

enum MaterialFlags: uint64 (bit_flags) {
    Regenerate,
}

enum MaterialPhase: uint8 {
    Solid,
    Liquid,
    Gas,
}

enum MaterialRenderModel: uint32 {
    Invisible,
    Phong,
    Blinn,
}

table Material {
    flags: MaterialFlags;

    name: string;

    phase: MaterialPhase;

    mass: float;

    render_model: MaterialRenderModel = Blinn;
    color_ambient: Vec4_f;
    color_diffuse: Vec4_f;
    color_specular: Vec4_f;
    shininess: float;
}

table InitResponse {
    capabilities: uint64;

    materials: [Material];
}

table TerrainChunk {
    size_log2: uint8;
    coord: Vec3_u32;
    is_rigid_body: bool;

    cell_materials: [uint32];
}

table TerrainMessage {
    chunks: [TerrainChunk];
}

union MessageUnion { InitRequest, InitResponse, TerrainMessage }

table Message {
    message: MessageUnion;
}

root_type Message;
